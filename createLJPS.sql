drop database if exists SPM_LJPS_DB;
create database SPM_LJPS_DB;
use SPM_LJPS_DB;

create table staff (
    staff_id integer primary key,
    staff_fname varchar(50),
    staff_lname varchar(50),
    email varchar(50),
    designation integer
);

insert into staff (staff_id, staff_fname, staff_lname, email, designation) values 
    (130001,'John' ,'Sim','john.sim@allinone.com.sg', 1),
	(130002,'Jack' ,'Sim','jack.sim@allinone.com.sg', 1),
	(140001,'Derek' ,'Tan','Derek.Tan@allinone.com.sg', 3),
	(140002,'Susan' ,'Goh','Susan.Goh@allinone.com.sg', 2),
	(140003,'Janice' ,'Chan','Janice.Chan@allinone.com.sg', 2),
	(140004,'Mary' ,'Teo','Mary.Teo@allinone.com.sg', 2),
	(140008,'Jaclyn' ,'Lee','Jaclyn.Lee@allinone.com.sg', 2),
	(140015,'Oliva' ,'Lim','Oliva.Lim@allinone.com.sg', 2),
	(140025,'Emma' ,'Heng','Emma.Heng@allinone.com.sg', 2),
	(140036,'Charlotte' ,'Wong','Charlotte.Wong@allinone.com.sg', 2),
	(140078,'Amelia' ,'Ong','Amelia.Ong@allinone.com.sg', 2),
	(140102,'Eva' ,'Yong','Eva.Yong@allinone.com.sg', 2),
	(140103,'Sophia' ,'Toh','Sophia.Toh@allinone.com.sg', 2),
	(140108,'Liam' ,'The','Liam.The@allinone.com.sg', 2),
	(140115,'Noah' ,'Ng','Noah.Ng@allinone.com.sg', 2),
	(140525,'Oliver' ,'Tan','Oliver.Tan@allinone.com.sg', 2),
	(140736,'William' ,'Fu','William.Fu@allinone.com.sg', 2),
	(140878,'James' ,'Tong','James.Tong@allinone.com.sg', 2),
	(150008,'Eric' ,'Loh','Eric.Loh@allinone.com.sg', 3),
	(150065,'Noah' ,'Goh','Noah.Goh@allinone.com.sg', 4),
	(150075,'Liam' ,'Tan','Liam.Tan@allinone.com.sg', 4),
	(150076,'Oliver' ,'Chan','Oliver.Chan@allinone.com.sg', 4),
	(150085,'Michael' ,'Ng','Michael.Ng@allinone.com.sg', 4),
	(150095,'Alexander' ,'The','Alexander.The@allinone.com.sg', 4),
	(150096,'Ethan' ,'Tan','Ethan.Tan@allinone.com.sg', 4),
	(150115,'Jaclyn' ,'Lee','Jaclyn.Lee@allinone.com.sg', 4),
	(150118,'William' ,'Teo','William.Teo@allinone.com.sg', 4),
	(150125,'Mary' ,'Teo','Mary.Teo@allinone.com.sg', 4),
	(150126,'Oliva' ,'Lim','Oliva.Lim@allinone.com.sg', 2),
	(150138,'Daniel' ,'Fu','Daniel.Fu@allinone.com.sg', 4),
	(150142,'James' ,'Lee','James.Lee@allinone.com.sg', 4),
	(150143,'John' ,'Lim','John.Lim@allinone.com.sg', 4),
	(150148,'Jack' ,'Heng','Jack.Heng@allinone.com.sg', 4),
	(150155,'Derek' ,'Wong','Derek.Wong@allinone.com.sg', 4),
	(150162,'Jacob' ,'Tong','Jacob.Tong@allinone.com.sg', 4),
	(150163,'Logan' ,'Loh','Logan.Loh@allinone.com.sg', 4),
	(150165,'Oliver' ,'Tan','Oliver.Tan@allinone.com.sg', 2),
	(150166,'William' ,'Fu','William.Fu@allinone.com.sg', 2),
	(150168,'Jackson' ,'Tan','Jackson.Tan@allinone.com.sg', 4),
	(150175,'Aiden' ,'Tan','Aiden.Tan@allinone.com.sg', 4),
	(150192,'Emma' ,'Heng','Emma.Heng@allinone.com.sg', 2),
	(150193,'Charlotte' ,'Wong','Charlotte.Wong@allinone.com.sg', 2),
	(150198,'Amelia' ,'Ong','Amelia.Ong@allinone.com.sg', 2),
	(150205,'Eva' ,'Yong','Eva.Yong@allinone.com.sg', 2),
	(150208,'James' ,'Tong','James.Tong@allinone.com.sg', 2),
	(150215,'Michael' ,'Lee','Michael.Lee@allinone.com.sg', 2),
	(150216,'Ethan' ,'Lim','Ethan.Lim@allinone.com.sg', 2),
	(150232,'John' ,'Loh','John.Loh@allinone.com.sg', 2),
	(150233,'Jack' ,'Tan','Jack.Tan@allinone.com.sg', 2),
	(150238,'Derek' ,'Tan','Derek.Tan@allinone.com.sg', 2),
	(150245,'Benjamin' ,'Tan','Benjamin.Tan@allinone.com.sg', 2),
	(150258,'Daniel' ,'Heng','Daniel.Heng@allinone.com.sg', 2),
	(150265,'Jaclyn' ,'Tong','Jaclyn.Tong@allinone.com.sg', 2),
	(150275,'Mary' ,'Fu','Mary.Fu@allinone.com.sg', 2),
	(150276,'Oliva' ,'Loh','Oliva.Loh@allinone.com.sg', 2),
	(150282,'Jacob' ,'Wong','Jacob.Wong@allinone.com.sg', 2),
	(150283,'Logan' ,'Ong','Logan.Ong@allinone.com.sg', 2),
	(150288,'Jackson' ,'Yong','Jackson.Yong@allinone.com.sg', 2),
	(150295,'Aiden' ,'Toh','Aiden.Toh@allinone.com.sg', 2),
	(150318,'Emma' ,'Tan','Emma.Tan@allinone.com.sg', 2),
	(150342,'Charlotte' ,'Tan','Charlotte.Tan@allinone.com.sg', 2),
	(150343,'Amelia' ,'Tan','Amelia.Tan@allinone.com.sg', 2),
	(150345,'William' ,'Heng','William.Heng@allinone.com.sg', 2),
	(150348,'Eva' ,'Goh','Eva.Goh@allinone.com.sg', 2),
	(150355,'Sophia' ,'Chan','Sophia.Chan@allinone.com.sg', 2),
	(150356,'James' ,'Wong','James.Wong@allinone.com.sg', 2),
	(150398,'John' ,'Ong','John.Ong@allinone.com.sg', 2),
	(150422,'Jack' ,'Yong','Jack.Yong@allinone.com.sg', 2),
	(150423,'Derek' ,'Toh','Derek.Toh@allinone.com.sg', 2),
	(150428,'Benjamin' ,'The','Benjamin.The@allinone.com.sg', 2),
	(150435,'Lucas' ,'Ng','Lucas.Ng@allinone.com.sg', 2),
	(150445,'Ethan' ,'Loh','Ethan.Loh@allinone.com.sg', 2),
	(150446,'Daniel' ,'Tan','Daniel.Tan@allinone.com.sg', 2),
	(150488,'Jacob' ,'Tan','Jacob.Tan@allinone.com.sg', 2),
	(150512,'Logan' ,'Tan','Logan.Tan@allinone.com.sg', 2),
	(150513,'Jackson' ,'Goh','Jackson.Goh@allinone.com.sg', 2),
	(150518,'Aiden' ,'Chan','Aiden.Chan@allinone.com.sg', 2),
	(150525,'Samuel' ,'Teo','Samuel.Teo@allinone.com.sg', 2),
	(150555,'Jaclyn' ,'Wong','Jaclyn.Wong@allinone.com.sg', 2),
	(150565,'Benjamin' ,'Ong','Benjamin.Ong@allinone.com.sg', 4),
	(150566,'Oliva' ,'Ong','Oliva.Ong@allinone.com.sg', 2),
	(150585,'Samuel' ,'Tan','Samuel.Tan@allinone.com.sg', 4),
	(150608,'Emma' ,'Yong','Emma.Yong@allinone.com.sg', 2),
	(150615,'Sophia' ,'Toh','Sophia.Toh@allinone.com.sg', 2),
	(150632,'Charlotte' ,'Toh','Charlotte.Toh@allinone.com.sg', 2),
	(150633,'Amelia' ,'The','Amelia.The@allinone.com.sg', 2),
	(150638,'Eva' ,'Ng','Eva.Ng@allinone.com.sg', 2),
	(150645,'Sophia' ,'Tan','Sophia.Tan@allinone.com.sg', 2),
	(150655,'Lucas' ,'Goh','Lucas.Goh@allinone.com.sg', 2),
	(150695,'William' ,'Tan','William.Tan@allinone.com.sg', 2),
	(150705,'Samuel' ,'The','Samuel.The@allinone.com.sg', 2),
	(150765,'Liam' ,'Teo','Liam.Teo@allinone.com.sg', 2),
	(150776,'Lucas' ,'Yong','Lucas.Yong@allinone.com.sg', 4),
	(150796,'Susan' ,'Goh','Susan.Goh@allinone.com.sg', 4),
	(150826,'Liam' ,'The','Liam.The@allinone.com.sg', 2),
	(150845,'Henry' ,'Tan','Henry.Tan@allinone.com.sg', 2),
	(150866,'Henry' ,'Chan','Henry.Chan@allinone.com.sg', 2),
	(150916,'Susan' ,'Ng','Susan.Ng@allinone.com.sg', 2),
	(150918,'Henry' ,'Toh','Henry.Toh@allinone.com.sg', 4),
	(150935,'Susan' ,'Lee','Susan.Lee@allinone.com.sg', 2),
	(150938,'Janice' ,'Chan','Janice.Chan@allinone.com.sg', 4),
	(150968,'Noah' ,'Ng','Noah.Ng@allinone.com.sg', 2),
	(150976,'Noah' ,'Lee','Noah.Lee@allinone.com.sg', 2),
	(151008,'Alexander' ,'Teo','Alexander.Teo@allinone.com.sg', 2),
	(151055,'Liam' ,'Fu','Liam.Fu@allinone.com.sg', 2),
	(151056,'Alexander' ,'Fu','Alexander.Fu@allinone.com.sg', 2),
	(151058,'Janice' ,'Tan','Janice.Tan@allinone.com.sg', 2),
	(151118,'Oliver' ,'Lim','Oliver.Lim@allinone.com.sg', 2),
	(151146,'Janice' ,'Lim','Janice.Lim@allinone.com.sg', 2),
	(151198,'Michael' ,'Tong','Michael.Tong@allinone.com.sg', 2),
	(151266,'Noah' ,'Tong','Noah.Tong@allinone.com.sg', 2),
	(151288,'Mary' ,'Heng','Mary.Heng@allinone.com.sg', 2),
	(151408,'Oliver' ,'Loh','Oliver.Loh@allinone.com.sg', 2),
	(160008,'Sally' ,'Loh','Sally.Loh@allinone.com.sg', 1),
	(160065,'John' ,'Tan','John.Tan@allinone.com.sg', 1),
	(160075,'James' ,'Tan','James.Tan@allinone.com.sg', 1),
	(160076,'Jack' ,'Goh','Jack.Goh@allinone.com.sg', 1),
	(160118,'Derek' ,'Chan','Derek.Chan@allinone.com.sg', 1),
	(160135,'Jaclyn' ,'Ong','Jaclyn.Ong@allinone.com.sg', 2),
	(160142,'Benjamin' ,'Teo','Benjamin.Teo@allinone.com.sg', 1),
	(160143,'Lucas' ,'Lee','Lucas.Lee@allinone.com.sg', 1),
	(160145,'Mary' ,'Wong','Mary.Wong@allinone.com.sg', 2),
	(160146,'Oliva' ,'Yong','Oliva.Yong@allinone.com.sg', 2),
	(160148,'Henry' ,'Lim','Henry.Lim@allinone.com.sg', 1),
	(160155,'Alexander' ,'Heng','Alexander.Heng@allinone.com.sg', 1),
	(160188,'Emma' ,'Toh','Emma.Toh@allinone.com.sg', 2),
	(160212,'Charlotte' ,'The','Charlotte.The@allinone.com.sg', 2),
	(160213,'Amelia' ,'Ng','Amelia.Ng@allinone.com.sg', 2),
	(160218,'Eva' ,'Tan','Eva.Tan@allinone.com.sg', 2),
	(160225,'Sophia' ,'Fu','Sophia.Fu@allinone.com.sg', 2),
	(160258,'Michael' ,'Tong','Michael.Tong@allinone.com.sg', 2),
	(160282,'Ethan' ,'Loh','Ethan.Loh@allinone.com.sg', 2),
	(170166,'David' ,'Yap','David.Yap@allinone.com.sg', 3),
	(170208,'Daniel' ,'Tan','Daniel.Tan@allinone.com.sg', 2),
	(170215,'Mary' ,'Wong','Mary.Wong@allinone.com.sg', 2),
	(170216,'Jaclyn' ,'Ong','Jaclyn.Ong@allinone.com.sg', 2),
	(170232,'Jacob' ,'Tan','Jacob.Tan@allinone.com.sg', 2),
	(170233,'Logan' ,'Goh','Logan.Goh@allinone.com.sg', 2),
	(170238,'Jackson' ,'Chan','Jackson.Chan@allinone.com.sg', 2),
	(170245,'Aiden' ,'Teo','Aiden.Teo@allinone.com.sg', 2),
	(170655,'Samuel' ,'Lee','Samuel.Lee@allinone.com.sg', 2),
	(170866,'Susan' ,'Lim','Susan.Lim@allinone.com.sg', 2),
	(171008,'Janice' ,'Heng','Janice.Heng@allinone.com.sg', 2);

    
create table department (
    dept_id integer auto_increment primary key,
    dept_name varchar(50)
);

insert into department (dept_id, dept_name) values
    (1, 'Sales'),
    (2, 'Operations'),
    (3, 'HR'),
    (4, 'Finance'),
    (5, 'IT'),
    (6, 'Manager');

create table department_staff (
    department_id integer,
    staff_id integer,
    is_manager integer,
    PRIMARY KEY (department_id, staff_id),
	constraint department_staff_fk1 foreign key(staff_id) references staff(staff_id),
    constraint department_staff_fk2 foreign key(department_id) references department(dept_id)
);

-- insert into department_staff (department_id, staff_id, is_manager) values
--     (1, 1, 0),
--     (1, 2, 1),
--     (2, 3, 0),
--     (2, 4, 1),
--     (3, 5, 0),
--     (3, 6, 1),
--     (4, 7, 0),
--     (4, 8, 1),
--     (5, 9, 0),
--     (5, 10, 1),
--     (6, 11, 0),
--     (6, 12, 1);

create table role (
    role_id integer auto_increment primary key,
    role_name varchar(50),
    role_desc varchar(255),
    is_active varchar(50)
);

insert into role (role_id, role_name, role_desc, is_active) values
    (1, "Engineer", "This role is good at engineering.","active"),
    (2, "Manager", "This role is good at managing.", "active"),
    (3, "IT Developer", "This role is good at web development.", "active"),
    (4, "Death, Destroyer of Worlds", "This role is good at petting kittens.", "active");

create table learning_journey (
    lj_id integer auto_increment primary key,
    lj_name varchar(50),
    staff_id integer,
    role_id integer,
    constraint learning_journey_fk1 foreign key(staff_id) references staff(staff_id),
    constraint learning_journey_fk2 foreign key(role_id) references role(role_id)
);

insert into learning_journey (lj_id, lj_name, staff_id, role_id) values
    (1, "John's Learning Journey", 130001, 1),
    (2, "Edel's Learning Journey", 130002, 2),
    (3, "Simron's Learning Journey", 140001, 3),
    (4, "Elro's Learning Journey", 140002, 4);

create table skill (
    skill_id integer auto_increment primary key,
    skill_name varchar(50),
    skill_desc varchar(255),
    is_active varchar(50)
);

insert into skill (skill_id, skill_name, skill_desc, is_active) values
    (1, "Engineering", "This skill makes you good at engineering.", "active"),
    (2, "Communications", "This skills makes you good at communication.", "active"),
    (3, "Super Communications", "This skills makes you very good at communication.", "active"),
    (4, "SQL", "This skill makes you good at DBMS.", "active"),
    (5, "Meteor Swarm", "This skill does 40d6 fire and bludgeoning damage to all creatures in the area.", "active"),
    (6, "Lightning Bolt", "This skill does 8d6 lightning damage in a 100ft line", "active"),
    (7, "Operator", "This skill makes you good at operations.", "active"),
    (8, "Technical Photography", "This skill makes you good at the Hardware equipment aspects of photography.", "active"),
    (9, "Marketing", "This skill makes you good at Digital Marketing.", "active"),
    (10, "Network Security", "This skill makes you good at implementing Network Security.", "active");

create table course (
    course_id varchar(10) primary key,
    course_name varchar(50),
    course_desc varchar(255),
    course_status varchar(15),      -- boolean. Tracks active/retired courses
    course_type varchar(10),        -- boolean, tracks internal/external courses
    course_category varchar(50)
);

insert into course (course_id, course_name, course_desc,
                    course_status, course_type, course_category) values
    ("COR001", "Systems Thinking and Design", "This foundation module aims to introduce students to the fundamental concepts and underlying principles of systems thinking",
    "Active", "Internal", "Core"),
    ("COR002", "Lean Six Sigma Green Belt Certification", "Apply Lean Six Sigma methodology and statistical tools such as Minitab to be used in process analytics",
    "Active", "Internal", "Core"),
    ("COR004", "Service Excellence", "The programme provides the learner with the key foundations of what builds customer confidence in the service industry",
    "Pending", "Internal", "Core"),
    ("COR006", "Manage Change", "Identify risks associated with change and develop risk mitigation plans.",
    "Retired", "External", "Core"),
    ("FIN001", "Data Collection and Analysis", "Data is meaningless unless insights and analysis can be drawn to provide useful information for business decision-making. It is imperative that data quality, integrity and security",
    "Active", "External", "Finance"),
    ("FIN002", "Risk and Compliance Reporting", "Regulatory reporting is a requirement for businesses from highly regulated sectors to demonstrate compliance with the necessary regulatory provisions.",
    "Active", "External", "Finance"),
    ("FIN003", "Business Continuity Planning", "Business continuity planning is essential in any business to minimise loss when faced with potential threats and disruptions.",
    "Retired", "External", "Finance"),
    ("HRD001", "Leading and Shaping a Culture in Learning", "This training programme, delivered by the National Centre of Excellence (Workplace Learning), aims to equip participants with the skills and knowledge of the National workplace learning certification framework,",
    "Active", "External", "HR"),
    ("MGT001", "People Management", "enable learners to manage team performance and development through effective communication, conflict resolution and negotiation skills.",
    "Active", "Internal", "Management"),
    ("MGT002", "Workplace Conflict Management for Professionals", "This course will address the gaps to build consensus and utilise knowledge of conflict management techniques to diffuse tensions and achieve resolutions effectively in the best interests of the organisation.", 
    "Active","External", "Management"),
    ("MGT003", "Enhance Team Performance Through Coaching", "The course aims to upskill real estate team leaders in the area of service coaching for performance.", 
    "Pending","Internal", "Management"),
    ("MGT004", "Personal Effectiveness for Leaders", "Learners will be able to acquire the skills and knowledge to undertake self-assessment in relation to one’s performance and leadership style", 
    "Active","External", "Management"),
    ("MGT007", "Supervisory Management Skills", "Supervisors lead teams, manage tasks, solve problems, report up and down the hierarchy, and much more.",
    "Retired", "External", "Management"),
    ("SAL001", "Risk Management for Smart Business", "Apply risk management concepts to digital business",
    "Retired", "Internal", "Sales"),
    ("SAL002", "CoC in Smart Living Solutions", "Participants will acquire the knowledge and skills in setting up a smart living solution",
    "Pending", "External", "Sales"),
    ("SAL003", "Optimising Your Brand For The Digital Spaces", "Digital has fundamentally shifted communication between brands and their consumers from a one-way broadcast to a two-way dialogue. In a hastened bid to transform their businesses to be digital market-ready,",
    "Active", "External", "Sales"),
    ("SAL004", "Stakeholder Management", "Develop a stakeholder engagement plan and negotiate with stakeholders to arrive at mutually-beneficial arrangements.",
    "Active", "Internal", "Sales"),
    ("tch001", "Print Server Setup", "Setting up print server in enterprise environment",
    "Retired", "Internal", "Technical"),
    ("tch002", "Canon MFC Setup", "Setting up Canon ImageRUNNER series of products",
    "Retired", "Internal", "Technical"),
    ("tch003", "Canon MFC Mainteance and Troubleshooting", "Troubleshoot and fixing L2,3 issues of Canon ImageRUNNER series of products",
    "Active", "Internal", "Technical"),
    ("tch004", "Introduction to Open Platform Communications", "This course provides the participants with a good in-depth understanding of the SS IEC 62541 standard",
    "Pending", "Internal", "Technical"),
    ("tch005", "An Introduction to Sustainability", "The course provides learners with the multi-faceted basic knowledge of sustainability.",
    "Active", "External", "Technical"),
    ("tch006", "Machine Learning DevOps Engineer ", "The Machine Learning DevOps Engineer Nanodegree program focuses on the software engineering fundamentals needed to successfully streamline the deployment of data and machine-learning models",
    "Pending", "Internal", "Technical"),
    ("tch008", "Technology Intelligence and Strategy", "Participants will be able to gain knowledge and skills on: - establishing technology strategy with technology intelligence framework and tools",
    "Active", "External", "Technical"),
    ("tch009", "Smart Sensing Technology", "This course introduces sensors and sensing systems. The 5G infrastructure enables the many fast-growing IoT applications equipped with sensors ",
    "Pending", "External", "Technical"),
    ("tch012", "Internet of Things", "The Internet of Things (IoT) is integrating our digital and physical world, opening up new and exciting opportunities to deploy, automate, optimize and secure diverse use cases and applications.",
    "Active", "Internal", "Technical"),
    ("tch013", "Managing Cybersecurity and Risks", "Digital security is the core of our daily lives considering that our dependence on the digital world",
    "Active", "Internal", "Technical"),
    ("tch014", "Certified Information Privacy Professional", "The Certified Information Privacy Professional/ Asia (CIPP/A) is the first publicly available privacy certification",
    "Active", "External", "Technical"),
    ("tch015", "Network Security", "Understanding of the fundamental knowledge of network security including cryptography, authentication and key distribution. The security techniques at various layers of computer networks are examined.",
    "Active", "External", "Technical"),
    ("tch018", "Professional Project Management", "solid foundation in the project management processes from initiating a project, through planning, execution, control,",
    "Active", "Internal", "Technical"),
    ("tch019", "Innovation and Change Management ", "the organization that constantly reinvents itself to be relevant has a better chance of making progress",
    "Active", "External", "Technical");

create table course_skill (
    course_id varchar(10),
    skill_id integer,
    PRIMARY KEY (course_id, skill_id),
	constraint course_skill_fk1 foreign key(course_id) references course(course_id),
    constraint course_skill_fk2 foreign key(skill_id) references skill(skill_id)
);

insert into course_skill (course_id, skill_id) values
    ("COR001", 1),
    ("COR002", 1),
    ("COR004", 2),
    ("COR006", 2),
    ("MGT001", 3),
    ("MGT002", 4),
    ("MGT003", 4),
    ("MGT004", 5),
    ("MGT007", 6),
    ("SAL001", 7),
    ("SAL002",2),
    ("SAL003",8),
    ("tch001",9),
    ("tch002",10);

create table role_skill (
    role_id integer,
    skill_id integer,
    PRIMARY KEY (role_id, skill_id),
	constraint role_skill_fk1 foreign key(role_id) references role(role_id),
    constraint role_skill_fk2 foreign key(skill_id) references skill(skill_id)
);

insert into role_skill (role_id, skill_id) values
    (1, 1),
    (1, 2),
    (2, 2),
    (2, 3),
    (3, 4),
    (3, 7),
    (4, 3),
    (4, 5);

create table lj_course (
    learning_journey_id integer,
    course_id varchar(10),
    PRIMARY KEY (learning_journey_id, course_id),
	constraint lj_course_fk1 foreign key(learning_journey_id) references learning_journey(lj_id),
    constraint lj_course_fk2 foreign key(course_id) references course(course_id)
);

insert into lj_course (learning_journey_id, course_id) values
    (1, "COR001"),
    (1, "MGT001"),
    (1, "SAL001"),
    (2, "COR001"),
    (2, "tch001"),
    (2, "tch003"),
    (3, "COR001"),
    (3, "SAL001"),
    (3, "MGT002"),
    (4, "FIN001"),
    (4, "COR002"),
    (4, "tch003");

create table registration (
    reg_id integer auto_increment PRIMARY KEY,
    staff_id integer,
    course_id varchar(10),
    reg_status varchar(20),
    completion_status varchar(20),
    -- PRIMARY KEY (staff_id, course_id),
	constraint registration_fk1 foreign key(staff_id) references staff(staff_id),
    constraint registration_fk2 foreign key(course_id) references course(course_id)
);

insert into registration (staff_id, course_id, 
                        reg_status, completion_status) values
    (130001, 'COR001', 'Registered', 'Completed'),
	(130001, 'COR002', 'Registered', 'Completed'),
	(130002, 'COR002', 'Registered', 'Completed'),
	(140001, 'COR006', 'Waitlist', 'null'),
	(140001, 'MGT001', 'Registered', 'Completed'),
	(140001, 'SAL004', 'Registered', 'Completed'),
	(140001, 'COR002', 'Registered', 'Completed'),
	(140002, 'FIN001', 'Waitlist', 'null'),
	(140002, 'SAL004', 'Registered', 'Completed'),
	(140002, 'COR002', 'Registered', 'Completed'),
	(140003, 'FIN002', 'Registered', 'Completed'),
	(140003, 'SAL003', 'Registered', 'Completed'),
	(140003, 'COR002', 'Rejected', 'null'),
	(140004, 'FIN003', 'Registered', 'OnGoing'),
	(140004, 'COR002', 'Registered', 'Completed'),
	(140004, 'SAL003', 'Registered', 'OnGoing'),
	(140008, 'HRD001', 'Registered', 'OnGoing'),
	(140008, 'SAL004', 'Rejected', 'null'),
	(140008, 'COR002', 'Registered', 'OnGoing'),
	(140015, 'MGT001', 'Registered', 'null'),
	(140015, 'COR002', 'Waitlist', 'null'),
	(140025, 'MGT002', 'Rejected', 'null'),
	(140025, 'SAL003', 'Registered', 'OnGoing'),
	(140025, 'COR002', 'Registered', 'OnGoing'),
	(140036, 'MGT004', 'Registered', 'null'),
	(140036, 'COR002', 'Waitlist', 'null'),
	(140078, 'MGT007', 'Registered', 'Completed'),
	(140078, 'SAL004', 'Registered', 'null'),
	(140078, 'COR002', 'Waitlist', 'null'),
	(140102, 'SAL001', 'Waitlist', 'null'),
	(140102, 'SAL004', 'Waitlist', 'null'),
	(140102, 'COR002', 'Registered', 'null'),
	(140103, 'SAL003', 'Waitlist', 'null'),
	(140103, 'COR002', 'Registered', 'null'),
	(140108, 'SAL004', 'Registered', 'Completed'),
	(140108, 'SAL003', 'Registered', 'Completed'),
	(140108, 'COR002', 'Registered', 'null'),
	(140115, 'tch001', 'Registered', 'Completed'),
	(140115, 'SAL004', 'Registered', 'Completed'),
	(140115, 'COR002', 'Registered', 'Completed'),
	(140525, 'tch002', 'Registered', 'Completed'),
	(140525, 'SAL004', 'Registered', 'Completed'),
	(140525, 'COR002', 'Rejected', 'null'),
	(140736, 'tch003', 'Registered', 'OnGoing'),
	(140736, 'COR002', 'Waitlist', 'null'),
	(140736, 'SAL003', 'Registered', 'OnGoing'),
	(140878, 'tch005', 'Rejected', 'null'),
	(140878, 'SAL003', 'Rejected', 'null'),
	(140878, 'COR002', 'Registered', 'Completed'),
	(150008, 'tch008', 'Registered', 'OnGoing'),
	(150008, 'COR002', 'Registered', 'Completed'),
	(150008, 'MGT001', 'Registered', 'Completed'),
	(150065, 'tch013', 'Waitlist', 'null'),
	(150065, 'tch003', 'Waitlist', 'null'),
	(150065, 'COR002', 'Waitlist', 'null'),
	(150075, 'tch012', 'Registered', 'null'),
	(150075, 'tch002', 'Registered', 'null'),
	(150075, 'COR002', 'Registered', 'Completed'),
	(150076, 'tch014', 'Waitlist', 'null'),
	(150076, 'COR002', 'Waitlist', 'null'),
	(150085, 'HRD001', 'Registered', 'OnGoing'),
	(150085, 'tch002', 'Waitlist', 'null'),
	(150085, 'COR002', 'Waitlist', 'null'),
	(150095, 'FIN003', 'Waitlist', 'null'),
	(150095, 'tch001', 'Waitlist', 'null'),
	(150095, 'COR002', 'Registered', 'null'),
	(150096, 'MGT001', 'Registered', 'OnGoing'),
	(150096, 'tch003', 'Registered', 'Completed'),
	(150096, 'COR002', 'Waitlist', 'null'),
	(150115, 'tch005', 'Registered', 'Completed'),
	(150115, 'tch001', 'Registered', 'Completed'),
	(150115, 'COR002', 'Waitlist', 'null'),
	(150118, 'tch015', 'Registered', 'null'),
	(150118, 'tch005', 'Registered', 'Completed'),
	(150118, 'COR002', 'Registered', 'Completed'),
	(150125, 'tch003', 'Registered', 'Completed'),
	(150125, 'COR002', 'Registered', 'OnGoing'),
	(150126, 'tch008', 'Registered', 'OnGoing'),
	(150126, 'tch002', 'Registered', 'Completed'),
	(150126, 'COR002', 'Waitlist', 'null'),
	(150138, 'MGT002', 'Registered', 'null'),
	(150138, 'COR002', 'Registered', 'Completed'),
	(150142, 'tch018', 'Registered', 'null'),
	(150142, 'COR002', 'Registered', 'OnGoing'),
	(150143, 'tch019', 'Registered', 'Completed'),
	(150143, 'tch001', 'Registered', 'Completed'),
	(150143, 'COR002', 'Registered', 'OnGoing'),
	(150148, 'COR001', 'Registered', 'Completed'),
	(150148, 'tch002', 'Registered', 'OnGoing'),
	(150148, 'COR002', 'Registered', 'null'),
	(150155, 'tch003', 'Rejected', 'null'),
	(150155, 'COR002', 'Rejected', 'null'),
	(150162, 'MGT004', 'Registered', 'null'),
	(150162, 'tch005', 'Registered', 'Completed'),
	(150162, 'COR002', 'Registered', 'Completed'),
	(150163, 'MGT007', 'Rejected', 'null'),
	(150163, 'COR002', 'Registered', 'Completed'),
	(150165, 'COR002', 'Registered', 'OnGoing'),
	(150166, 'COR006', 'Registered', 'OnGoing'),
	(150166, 'tch003', 'Rejected', 'null'),
	(150166, 'MGT001', 'Registered', 'Completed'),
	(150166, 'FIN001', 'Waitlist', 'null'),
	(150166, 'tch005', 'Registered', 'Completed'),
	(150166, 'COR002', 'Registered', 'Completed'),
	(150168, 'SAL001', 'Registered', 'null'),
	(150168, 'tch001', 'Rejected', 'null'),
	(150168, 'COR002', 'Registered', 'Completed'),
	(150175, 'SAL003', 'Registered', 'Completed'),
	(150175, 'COR002', 'Rejected', 'null'),
	(150192, 'tch012', 'Rejected', 'null'),
	(150192, 'tch003', 'Registered', 'Completed'),
	(150192, 'COR002', 'Registered', 'null'),
	(150193, 'tch013', 'Registered', 'OnGoing'),
	(150193, 'COR002', 'Registered', 'null'),
	(150198, 'tch014', 'Registered', 'null'),
	(150198, 'tch005', 'Rejected', 'null'),
	(150198, 'COR002', 'Registered', 'null'),
	(150205, 'tch015', 'Waitlist', 'null'),
	(150205, 'COR002', 'Registered', 'Completed'),
	(150208, 'MGT002', 'Registered', 'Completed'),
	(150208, 'FIN001', 'Rejected', 'null'),
	(150208, 'tch005', 'Waitlist', 'null'),
	(150208, 'FIN002', 'Registered', 'Completed'),
	(150208, 'COR002', 'Waitlist', 'null'),
	(150215, 'tch003', 'Waitlist', 'null'),
	(150215, 'SAL001', 'Registered', 'OnGoing'),
	(150215, 'tch001', 'Registered', 'Completed'),
	(150215, 'FIN002', 'Registered', 'Completed'),
	(150215, 'tch002', 'Waitlist', 'null'),
	(150215, 'COR002', 'Registered', 'null'),
	(150216, 'SAL003', 'Rejected', 'null'),
	(150216, 'tch005', 'Registered', 'OnGoing'),
	(150216, 'FIN001', 'Registered', 'OnGoing'),
	(150216, 'tch003', 'Registered', 'Completed'),
	(150216, 'COR002', 'Waitlist', 'null'),
	(150232, 'MGT004', 'Registered', 'Completed'),
	(150232, 'FIN002', 'Registered', 'OnGoing'),
	(150232, 'FIN001', 'Registered', 'Completed'),
	(150232, 'tch001', 'Registered', 'Completed'),
	(150232, 'COR002', 'Waitlist', 'null'),
	(150233, 'MGT007', 'Registered', 'Completed'),
	(150233, 'FIN003', 'Registered', 'null'),
	(150233, 'FIN002', 'Registered', 'Completed'),
	(150233, 'tch002', 'Registered', 'OnGoing'),
	(150233, 'COR002', 'Registered', 'Completed'),
	(150238, 'SAL001', 'Registered', 'OnGoing'),
	(150238, 'HRD001', 'Waitlist', 'null'),
	(150238, 'FIN001', 'Registered', 'OnGoing'),
	(150238, 'tch003', 'Rejected', 'null'),
	(150238, 'COR002', 'Registered', 'OnGoing'),
	(150245, 'SAL003', 'Rejected', 'null'),
	(150245, 'MGT001', 'Waitlist', 'null'),
	(150245, 'tch001', 'Rejected', 'null'),
	(150245, 'FIN002', 'Rejected', 'null'),
	(150245, 'COR002', 'Registered', 'OnGoing'),
	(150258, 'SAL004', 'Registered', 'null'),
	(150258, 'COR002', 'Registered', 'null'),
	(150265, 'tch015', 'Registered', 'Completed'),
	(150265, 'tch001', 'Registered', 'Completed'),
	(150265, 'COR002', 'Registered', 'OnGoing'),
	(150275, 'tch014', 'Registered', 'Completed'),
	(150275, 'COR002', 'Waitlist', 'null'),
	(150276, 'tch018', 'Rejected', 'null'),
	(150276, 'COR002', 'Registered', 'Completed'),
	(150276, 'tch002', 'Registered', 'Completed'),
	(150282, 'tch001', 'Waitlist', 'null'),
	(150282, 'tch005', 'Registered', 'Completed'),
	(150282, 'COR002', 'Waitlist', 'null'),
	(150283, 'tch002', 'Registered', 'Completed'),
	(150283, 'COR002', 'Waitlist', 'null'),
	(150288, 'tch003', 'Registered', 'Completed'),
	(150288, 'tch001', 'Rejected', 'null'),
	(150288, 'COR002', 'Registered', 'Completed'),
	(150295, 'tch005', 'Registered', 'OnGoing'),
	(150295, 'COR002', 'Registered', 'Completed'),
	(150318, 'tch019', 'Waitlist', 'null'),
	(150318, 'tch003', 'Registered', 'Completed'),
	(150318, 'COR002', 'Registered', 'OnGoing'),
	(150342, 'COR001', 'Registered', 'Completed'),
	(150342, 'COR002', 'Waitlist', 'null'),
	(150343, 'tch005', 'Rejected', 'null'),
	(150343, 'COR002', 'Waitlist', 'null'),
	(150345, 'MGT001', 'Registered', 'Completed'),
	(150345, 'COR002', 'Registered', 'null'),
	(150345, 'tch005', 'Registered', 'Completed'),
	(150348, 'COR006', 'Registered', 'Completed'),
	(150348, 'COR002', 'Registered', 'null'),
	(150355, 'FIN001', 'Rejected', 'null'),
	(150355, 'COR002', 'Registered', 'null'),
	(150356, 'MGT002', 'Registered', 'OnGoing'),
	(150356, 'COR002', 'Registered', 'Completed'),
	(150398, 'MGT004', 'Registered', 'Completed'),
	(150398, 'COR002', 'Registered', 'Completed'),
	(150398, 'tch001', 'Registered', 'Completed'),
	(150422, 'MGT007', 'Registered', 'Completed'),
	(150422, 'tch002', 'Registered', 'OnGoing'),
	(150422, 'COR002', 'Registered', 'Completed'),
	(150423, 'SAL001', 'Waitlist', 'null'),
	(150423, 'tch003', 'Rejected', 'null'),
	(150423, 'COR002', 'Waitlist', 'null'),
	(150428, 'SAL003', 'Waitlist', 'null'),
	(150428, 'COR002', 'Waitlist', 'null'),
	(150435, 'SAL004', 'Registered', 'Completed'),
	(150435, 'COR002', 'Registered', 'Completed'),
	(150445, 'tch005', 'Rejected', 'null'),
	(150445, 'tch003', 'Registered', 'Completed'),
	(150445, 'COR002', 'Rejected', 'null'),
	(150446, 'tch008', 'Registered', 'null'),
	(150446, 'COR002', 'Registered', 'null'),
	(150488, 'tch012', 'Registered', 'Completed'),
	(150488, 'tch005', 'Registered', 'Completed'),
	(150488, 'COR002', 'Registered', 'null'),
	(150512, 'tch013', 'Waitlist', 'null'),
	(150512, 'COR002', 'Registered', 'null'),
	(150513, 'tch014', 'Waitlist', 'null'),
	(150513, 'tch001', 'Rejected', 'null'),
	(150513, 'COR002', 'Registered', 'Completed'),
	(150518, 'tch015', 'Registered', 'Completed'),
	(150518, 'COR002', 'Waitlist', 'null'),
	(150525, 'tch018', 'Registered', 'Completed'),
	(150525, 'COR002', 'Waitlist', 'null'),
	(150555, 'COR006', 'Registered', 'OnGoing'),
	(150555, 'tch001', 'Registered', 'Completed'),
	(150555, 'COR002', 'Registered', 'OnGoing'),
	(150565, 'COR006', 'Registered', 'Completed'),
	(150565, 'COR002', 'Registered', 'null'),
	(150566, 'FIN001', 'Registered', 'null'),
	(150566, 'tch002', 'Registered', 'Completed'),
	(150566, 'COR002', 'Rejected', 'null'),
	(150585, 'SAL004', 'Waitlist', 'null'),
	(150585, 'COR002', 'Registered', 'OnGoing'),
	(150608, 'FIN002', 'Waitlist', 'null'),
	(150608, 'COR002', 'Registered', 'OnGoing'),
	(150608, 'tch003', 'Registered', 'Completed'),
	(150615, 'tch018', 'Waitlist', 'null'),
	(150615, 'COR002', 'Rejected', 'null'),
	(150632, 'FIN003', 'Waitlist', 'null'),
	(150632, 'COR002', 'Registered', 'OnGoing'),
	(150633, 'HRD001', 'Registered', 'null'),
	(150633, 'COR002', 'Waitlist', 'null'),
	(150633, 'tch005', 'Rejected', 'null'),
	(150638, 'MGT001', 'Registered', 'null'),
	(150638, 'COR002', 'Registered', 'null'),
	(150645, 'MGT002', 'Registered', 'Completed'),
	(150645, 'COR002', 'Waitlist', 'null'),
	(150655, 'SAL004', 'Registered', 'OnGoing'),
	(150655, 'MGT002', 'Registered', 'Completed'),
	(150655, 'tch002', 'Registered', 'null'),
	(150655, 'FIN001', 'Waitlist', 'null'),
	(150655, 'COR002', 'Registered', 'null'),
	(150695, 'SAL003', 'Registered', 'Completed'),
	(150695, 'tch005', 'Registered', 'Completed'),
	(150695, 'COR002', 'Registered', 'Completed'),
	(150705, 'tch008', 'Rejected', 'null'),
	(150705, 'COR002', 'Registered', 'Completed'),
	(150765, 'FIN002', 'Registered', 'null'),
	(150765, 'tch002', 'Registered', 'null'),
	(150765, 'COR002', 'Registered', 'null'),
	(150776, 'FIN001', 'Registered', 'Completed'),
	(150776, 'COR002', 'Registered', 'null'),
	(150796, 'tch001', 'Waitlist', 'null'),
	(150796, 'COR002', 'Registered', 'OnGoing'),
	(150826, 'tch019', 'Registered', 'Completed'),
	(150826, 'COR002', 'Rejected', 'null'),
	(150826, 'tch002', 'Registered', 'null'),
	(150845, 'tch001', 'Registered', 'OnGoing'),
	(150845, 'COR002', 'Registered', 'OnGoing'),
	(150866, 'tch001', 'Registered', 'null'),
	(150866, 'MGT004', 'Registered', 'Completed'),
	(150866, 'tch003', 'Waitlist', 'null'),
	(150866, 'FIN002', 'Registered', 'Completed'),
	(150866, 'COR002', 'Rejected', 'null'),
	(150916, 'tch012', 'Waitlist', 'null'),
	(150916, 'COR002', 'Registered', 'Completed'),
	(150918, 'FIN002', 'Waitlist', 'null'),
	(150918, 'COR002', 'Registered', 'null'),
	(150935, 'tch019', 'Registered', 'Completed'),
	(150935, 'COR002', 'Registered', 'Completed'),
	(150938, 'tch002', 'Registered', 'Completed'),
	(150938, 'COR002', 'Rejected', 'null'),
	(150938, 'tch005', 'Waitlist', 'null'),
	(150968, 'COR001', 'Registered', 'Completed'),
	(150968, 'tch003', 'Waitlist', 'null'),
	(150968, 'COR002', 'Registered', 'Completed'),
	(150976, 'FIN003', 'Waitlist', 'null'),
	(150976, 'tch003', 'Waitlist', 'null'),
	(150976, 'COR002', 'Registered', 'Completed'),
	(151008, 'tch002', 'Waitlist', 'null'),
	(151008, 'MGT007', 'Registered', 'Completed'),
	(151008, 'tch005', 'Registered', 'Completed'),
	(151008, 'FIN001', 'Registered', 'Completed'),
	(151008, 'tch001', 'Waitlist', 'null'),
	(151008, 'COR002', 'Registered', 'null'),
	(151055, 'MGT004', 'Registered', 'Completed'),
	(151055, 'tch002', 'Registered', 'null'),
	(151055, 'COR002', 'Waitlist', 'null'),
	(151056, 'tch002', 'Registered', 'OnGoing'),
	(151056, 'tch001', 'Waitlist', 'null'),
	(151056, 'COR002', 'Registered', 'OnGoing'),
	(151058, 'tch013', 'Waitlist', 'null'),
	(151058, 'tch005', 'Waitlist', 'null'),
	(151058, 'COR002', 'Rejected', 'null'),
	(151118, 'HRD001', 'Registered', 'Completed'),
	(151118, 'COR002', 'Rejected', 'null'),
	(151146, 'COR001', 'Registered', 'OnGoing'),
	(151146, 'tch005', 'Waitlist', 'null'),
	(151146, 'COR002', 'Registered', 'Completed'),
	(151198, 'tch003', 'Registered', 'null'),
	(151198, 'tch002', 'Waitlist', 'null'),
	(151198, 'COR002', 'Registered', 'null'),
	(151266, 'MGT007', 'Rejected', 'null'),
	(151266, 'tch003', 'Waitlist', 'null'),
	(151266, 'COR002', 'Registered', 'null'),
	(151288, 'COR002', 'Registered', 'Completed'),
	(151408, 'SAL001', 'Registered', 'Completed'),
	(151408, 'COR002', 'Registered', 'null'),
	(160008, 'SAL004', 'Waitlist', 'null'),
	(160008, 'HRD001', 'Registered', 'Completed'),
	(160008, 'COR002', 'Registered', 'Completed'),
	(160065, 'tch002', 'Registered', 'OnGoing'),
	(160065, 'COR002', 'Waitlist', 'null'),
	(160065, 'MGT002', 'Registered', 'Completed'),
	(160075, 'tch001', 'Waitlist', 'null'),
	(160075, 'MGT001', 'Registered', 'Completed'),
	(160075, 'COR002', 'Rejected', 'null'),
	(160076, 'tch003', 'Registered', 'OnGoing'),
	(160076, 'COR002', 'Registered', 'Completed'),
	(160118, 'tch005', 'Registered', 'null'),
	(160118, 'SAL004', 'Registered', 'Completed'),
	(160118, 'MGT004', 'Rejected', 'null'),
	(160135, 'tch018', 'Waitlist', 'null'),
	(160135, 'SAL004', 'Waitlist', 'null'),
	(160135, 'MGT004', 'Registered', 'Completed'),
	(160135, 'COR002', 'Registered', 'null'),
	(160142, 'tch008', 'Registered', 'null'),
	(160142, 'SAL004', 'Registered', 'Completed'),
	(160142, 'COR002', 'Registered', 'Completed'),
	(160143, 'tch012', 'Rejected', 'null'),
	(160143, 'SAL003', 'Registered', 'Completed'),
	(160143, 'COR002', 'Waitlist', 'null'),
	(160145, 'tch015', 'Waitlist', 'null'),
	(160145, 'SAL003', 'Registered', 'null'),
	(160145, 'COR002', 'Registered', 'OnGoing'),
	(160146, 'tch019', 'Registered', 'Completed'),
	(160146, 'SAL004', 'Registered', 'Completed'),
	(160146, 'MGT007', 'Registered', 'Completed'),
	(160146, 'COR002', 'Registered', 'null'),
	(160148, 'tch013', 'Registered', 'null'),
	(160148, 'SAL003', 'Registered', 'OnGoing'),
	(160148, 'MGT001', 'Registered', 'null'),
	(160148, 'COR002', 'Waitlist', 'null'),
	(160155, 'tch014', 'Registered', 'Completed'),
	(160155, 'SAL004', 'Rejected', 'null'),
	(160155, 'MGT002', 'Waitlist', 'null'),
	(160155, 'COR002', 'Registered', 'OnGoing'),
	(160188, 'COR001', 'Registered', 'Completed'),
	(160188, 'SAL003', 'Registered', 'Completed'),
	(160188, 'HRD001', 'Registered', 'Completed'),
	(160188, 'COR002', 'Rejected', 'null'),
	(160212, 'COR002', 'Registered', 'Completed'),
	(160212, 'SAL003', 'Registered', 'OnGoing'),
	(160212, 'MGT001', 'Registered', 'OnGoing'),
	(160213, 'COR006', 'Registered', 'OnGoing'),
	(160213, 'SAL004', 'Rejected', 'null'),
	(160213, 'MGT002', 'Rejected', 'null'),
	(160213, 'COR002', 'Registered', 'null'),
	(160218, 'FIN001', 'Rejected', 'null'),
	(160218, 'SAL004', 'Waitlist', 'null'),
	(160225, 'FIN002', 'Registered', 'OnGoing'),
	(160225, 'SAL003', 'Waitlist', 'null'),
	(160225, 'COR002', 'Registered', 'Completed'),
	(160258, 'FIN003', 'Registered', 'null'),
	(160258, 'SAL003', 'Registered', 'Completed'),
	(160258, 'MGT007', 'Registered', 'null'),
	(160258, 'COR002', 'Waitlist', 'null'),
	(160282, 'HRD001', 'Waitlist', 'null'),
	(160282, 'tch002', 'Registered', 'Completed'),
	(160282, 'MGT001', 'Waitlist', 'null'),
	(160282, 'COR002', 'Waitlist', 'null');

    
    
create table staff_skill (
    staff_id integer,
    skill_id integer,
	constraint staff_skill_fk1 foreign key(staff_id) references staff(staff_id),
    constraint staff_skill_fk2 foreign key(skill_id) references skill(skill_id)
);

-- insert into staff_skill (staff_id, skill_id) values
--     (1, 1),
--     (2, 2),
--     (3, 3),
--     (4, 2),
--     (5, 4),
--     (6, 7),
--     (7, 3),
--     (8, 6),
--     (9, 3),
--     (10, 2),
--     (11, 7),
--     (12, 1);
